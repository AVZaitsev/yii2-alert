<?php

namespace avzaitsau\alert;

use avzaitsau\alert\widget\Alert;
use Yii;
use yii\base\Application;
use yii\base\BootstrapInterface;
use yii\helpers\Json;
use yii\web\ForbiddenHttpException;
use yii\web\View;

class Module extends \yii\base\Module implements BootstrapInterface
{
    /**
     * {@inheritdoc}
     */
    public $controllerNamespace = 'avzaitsau\alert\controllers';

    /**
     * @var string The [[UrlRule]] class to use for rules generated by this module.
     * @since 2.1.1
     */
    public $urlRuleClass = 'yii\web\UrlRule';

    /**
     * {@inheritdoc}
     */
    public function bootstrap($app)
    {
        // delay attaching event handler to the view component after it is fully configured
        $app->on(Application::EVENT_BEFORE_ACTION, function () use ($app) {
            $app->getView()->on(View::EVENT_END_BODY, [$this, 'renderWidget']);
        });

        $app->getUrlManager()->addRules([
            [
                'class' => $this->urlRuleClass,
                'route' => $this->getUniqueId() . '/<controller>/<action>',
                'pattern' => $this->getUniqueId() . '/<controller:[\w\-]+>/<action:[\w\-]+>',
                'normalizer' => false,
                'suffix' => false
            ]
        ], false);
    }

    /**
     * {@inheritdoc}
     * @throws \yii\base\InvalidConfigException
     * @throws ForbiddenHttpException
     */
    public function beforeAction($action)
    {
        if (!parent::beforeAction($action)) {
            return false;
        }

        // do not display alerts on alerts
        Yii::$app->getView()->off(View::EVENT_END_BODY, [$this, 'renderWidget']);

        return true;
    }

    /**
     * Renders alert widget at the end of page body.
     *
     * @param \yii\base\Event $event
     * @throws \Throwable
     */
    public function renderWidget($event)
    {
        if (Yii::$app->getRequest()->getIsAjax()) {
            return;
        }
        /** @var View $view */
        $view = $event->sender;

        echo Alert::widget();
        echo '<script>' . $view->renderPhpFile(__DIR__ . '/assets/sse-client.js') . '</script>';
    }

    /**
     * {@inheritdoc}
     */
    protected function defaultVersion()
    {
        $packageInfo = Json::decode(file_get_contents(dirname(__DIR__) . DIRECTORY_SEPARATOR . 'composer.json'));
        $extensionName = $packageInfo['name'];
        if (isset(Yii::$app->extensions[$extensionName])) {
            return Yii::$app->extensions[$extensionName]['version'];
        }
        return parent::defaultVersion();
    }
}
